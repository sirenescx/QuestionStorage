@model QuestionStorage.Models.ViewModels.EditViewModel

@{
    ViewData["Title"] = "Edit";
}

<!DOCTYPE html>
<head>
    <title>Edit</title>
    <link rel="stylesheet" href="/lib/bootstrap/dist/css/custom-stylesheet.css">
</head>
<body>
@using (Html.BeginForm("Edit", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <h1 class="page-header">Manage account</h1>
    <br/>
    <p class="ok">@ViewBag.Success</p>
    <h5 class="content-header">Change Password</h5>
    <p class="smaller-text less-bottom-space">Old password</p>
    @Html.ValidationMessageFor(model => model.OldPassword, string.Empty,
        new {@class = "text-danger smaller-text"})
    <p>
        @Html.EditorFor(model => model.OldPassword,
            new {htmlAttributes = new {@class = "password-textarea"}})</p>
    <p class="smaller-text less-bottom-space less-top-space">New password</p>
    @Html.ValidationMessageFor(model => model.NewPassword, string.Empty,
        new {@class = "text-danger smaller-text"})
    <p>
        @Html.EditorFor(model => model.NewPassword,
            new {htmlAttributes = new {@class = "password-textarea"}})</p>
    <p class="smaller-text less-bottom-space less-top-space">Confirmation Password</p>
    @Html.ValidationMessageFor(model => model.ConfirmPassword, string.Empty,
        new {@class = "text-danger smaller-text"})
    <p>
        @Html.EditorFor(model => model.ConfirmPassword,
            new {htmlAttributes = new {@class = "password-textarea"}})</p>
                                                                      
    <input type="submit" class="submit account" value="Change"/>
}
</body>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}