@using QuestionStorage.Models.Tags
@model QuestionStorage.Models.ViewModels.QuestionViewModel

@{
    ViewData["Title"] = "Create";

    var qTypes = new Dictionary<string, string>
    {
        {"sc", "Single choice"},
        {"mc", "Multiple choice"},
        {"oa", "Open answer"}
    };

    var selectList = new SelectList(qTypes.Select(
        x => new {Value = x.Key, Text = x.Value}), "Value", "Text");

    HashSet<TagsInfo> tags = ViewBag.Tags;
    var tagList = new SelectList(tags.Select(t => new {Value = $"ŧ{t.TagId}", Text = t.Name}),
        "Value", "Text");
}

<!DOCTYPE html>
<meta charset="utf-8">
<html lang="en">
<head>
    <title>Create</title>
    <link rel="stylesheet" href="/lib/bootstrap/dist/css/custom-stylesheet.css">
    <script src="/js/add-to-table.js"></script>
    <script src="/js/display-answer-variants.js"></script>
</head>
<style>
    .select2-container--default .select2-selection--multiple {
        height: calc(1.5em + 0.75rem + 1px)
    }
</style>

<body>
@using (Html.BeginForm("Create", "Questions", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("Please provide the details below and then click submit.",
        new {@class = "text-danger"})

    <h1 class="page-header">Create question</h1>

    @Html.Partial("_TextTitle")
    
    <p class="less-bottom-space">Template
        <input type="hidden" value="off" name="IsTemplate"> 
        <input name="IsTemplate" type="checkbox" value="on">
    </p>   

    <hr/>

    @Html.Label("Question type")
    <br/>
    @Html.DropDownListFor(model => model.Question.Type.Name, selectList,
        new {@class = "select", onchange = "displayAnswerVariants()", id = "typeOfQuestionSelector"})
    <hr/>

    <p id="answerInfo"></p>
    <table id="answerTable">
        <thead>
        <tr>
        <th style="font-weight: normal">Response options*</th>
        <th style="font-weight: normal">Correct</th>
        <th>
        <tbody>
        @{
            for (var i = 0; i <= 1; ++i)
            {
                <tr>
                    <td>
                        @Html.TextAreaFor(model => model.AnswerOption.Answer, 1, 60,
                            new {@class = "textarea long"})
                    </td>
                    <td style="text-align: center; vertical-align: top">
                        <input type="hidden" value="off" name="Correct">
                        <input name="Correct" type="radio" value="on">
                    </td>
                    <td>
                    </td>
                </tr>
            }
        }
    </table>

    <p>
        <button class="button add" id="addResponseOptions" type="button" onclick="addNewRow('answerTable')">
            Add new response option
        </button>
    </p>

    <hr/>

    @Html.Label("Tags")
    @Html.DropDownList("Tags", tagList, new {id = "tagView", multiple = "multiple"})
    <br/>

    <br/>
    <input type="submit" class="submit" value="Create question"/>
}
</body>
</html>

@section Scripts {
    <script>
    $(function() {
        $('#tagView').select2({
        width : "100%",
        tags: true,
        });
    });
    </script>

    <script>
        let textareas = document.getElementsByTagName('textarea');
        let count = textareas.length;
        for (let i = 0; i < count; ++i) {
            textareas[i].onkeydown = function(e) {
                if (e.key === 'Tab' || e.code === 'Tab' || e.keyCode === 9) {
                    e.preventDefault();
                    let s = this.selectionStart;
                    this.value = this.value.substring(
                        0, this.selectionStart) + "\t" + this.value.substring(this.selectionEnd);
                    this.selectionEnd = s + 1;
                }
            }
        }
        </script>

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}